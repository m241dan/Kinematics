#!/usr/local/bin/lua
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by korisd.
--- DateTime: 5/31/18 11:48 PM
---
local v = require( 'validator' )
local utils = require( 'luautils' )

local coords = dofile( arg[1] )

local length1 = 2.6
local length2 = 14.465
local length3 = 8.927
local length4 = 11.055

function inverseKinematics( x, y, z, e )
    local X_new = math.sqrt( x^2 + y^2 )
    local theta_1 = math.atan2( y, x )
    local X_c = X_new - length4*math.cos(e)
    local Z_c = z + length4*math.sin(-e)
    local Z_l = Z_c - length1
    local length5 = math.sqrt( X_c^2 + Z_l^2 )
    local alpha = math.acos( ( length5^2 - length2^2 - length3^2 ) / ( -2 * length2 * length3 ) )
    local theta_3 = -(math.pi - alpha)
    local Z_new = z - length1
    local alpha_4 = math.atan2( Z_new, X_new )
    local length6 = math.sqrt( Z_new^2 + X_new^2 )
    local alpha_3 = math.acos( (length4^2 - length5^2 - length6^2) / (-2 * length5 * length6 ) )
    local alpha_2 = math.acos( (length3^2 - length5^2 - length2^2) / (-2 * length5 * length2 ) )
    local theta_2 = alpha_2 + alpha_3 + alpha_4
    local theta_4 = e - theta_2 - theta_3

    return { x=x, y=y, z=z, e=e, theta_1, theta_2, theta_3, theta_4 }
end


local results_valid= {}
local results_invalid = {}

for _, i in ipairs( coords ) do
    local ik = inverseKinematics( i.x, i.y, i.z, i.e )
    if( v.validate( ik ) ) then
        table.insert( results_valid, ik )
    else
        table.insert( results_invalid, ik )
    end
 end

local output = io.open( arg[2] .. "_valid.lua" , "w+" )

utils.save( results_valid, output )

output:close()

-- output = io.open( arg[2] .. "_invalid.lua", "w+" )
-- utils.save( results_invalid, output )
-- output:close()